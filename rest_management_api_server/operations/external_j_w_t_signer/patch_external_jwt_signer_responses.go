// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package external_j_w_t_signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge/rest_model"
)

// PatchExternalJwtSignerOKCode is the HTTP code returned for type PatchExternalJwtSignerOK
const PatchExternalJwtSignerOKCode int = 200

/*PatchExternalJwtSignerOK The patch request was successful and the resource has been altered

swagger:response patchExternalJwtSignerOK
*/
type PatchExternalJwtSignerOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewPatchExternalJwtSignerOK creates PatchExternalJwtSignerOK with default headers values
func NewPatchExternalJwtSignerOK() *PatchExternalJwtSignerOK {

	return &PatchExternalJwtSignerOK{}
}

// WithPayload adds the payload to the patch external jwt signer o k response
func (o *PatchExternalJwtSignerOK) WithPayload(payload *rest_model.Empty) *PatchExternalJwtSignerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch external jwt signer o k response
func (o *PatchExternalJwtSignerOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExternalJwtSignerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchExternalJwtSignerBadRequestCode is the HTTP code returned for type PatchExternalJwtSignerBadRequest
const PatchExternalJwtSignerBadRequestCode int = 400

/*PatchExternalJwtSignerBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response patchExternalJwtSignerBadRequest
*/
type PatchExternalJwtSignerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewPatchExternalJwtSignerBadRequest creates PatchExternalJwtSignerBadRequest with default headers values
func NewPatchExternalJwtSignerBadRequest() *PatchExternalJwtSignerBadRequest {

	return &PatchExternalJwtSignerBadRequest{}
}

// WithPayload adds the payload to the patch external jwt signer bad request response
func (o *PatchExternalJwtSignerBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *PatchExternalJwtSignerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch external jwt signer bad request response
func (o *PatchExternalJwtSignerBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExternalJwtSignerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchExternalJwtSignerUnauthorizedCode is the HTTP code returned for type PatchExternalJwtSignerUnauthorized
const PatchExternalJwtSignerUnauthorizedCode int = 401

/*PatchExternalJwtSignerUnauthorized The currently supplied session does not have the correct access rights to request this resource

swagger:response patchExternalJwtSignerUnauthorized
*/
type PatchExternalJwtSignerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewPatchExternalJwtSignerUnauthorized creates PatchExternalJwtSignerUnauthorized with default headers values
func NewPatchExternalJwtSignerUnauthorized() *PatchExternalJwtSignerUnauthorized {

	return &PatchExternalJwtSignerUnauthorized{}
}

// WithPayload adds the payload to the patch external jwt signer unauthorized response
func (o *PatchExternalJwtSignerUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *PatchExternalJwtSignerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch external jwt signer unauthorized response
func (o *PatchExternalJwtSignerUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExternalJwtSignerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchExternalJwtSignerNotFoundCode is the HTTP code returned for type PatchExternalJwtSignerNotFound
const PatchExternalJwtSignerNotFoundCode int = 404

/*PatchExternalJwtSignerNotFound The requested resource does not exist

swagger:response patchExternalJwtSignerNotFound
*/
type PatchExternalJwtSignerNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewPatchExternalJwtSignerNotFound creates PatchExternalJwtSignerNotFound with default headers values
func NewPatchExternalJwtSignerNotFound() *PatchExternalJwtSignerNotFound {

	return &PatchExternalJwtSignerNotFound{}
}

// WithPayload adds the payload to the patch external jwt signer not found response
func (o *PatchExternalJwtSignerNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *PatchExternalJwtSignerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch external jwt signer not found response
func (o *PatchExternalJwtSignerNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExternalJwtSignerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
