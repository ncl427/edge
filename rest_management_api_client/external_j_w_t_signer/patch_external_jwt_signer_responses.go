// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package external_j_w_t_signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge/rest_model"
)

// PatchExternalJwtSignerReader is a Reader for the PatchExternalJwtSigner structure.
type PatchExternalJwtSignerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchExternalJwtSignerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchExternalJwtSignerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchExternalJwtSignerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchExternalJwtSignerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchExternalJwtSignerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchExternalJwtSignerOK creates a PatchExternalJwtSignerOK with default headers values
func NewPatchExternalJwtSignerOK() *PatchExternalJwtSignerOK {
	return &PatchExternalJwtSignerOK{}
}

/* PatchExternalJwtSignerOK describes a response with status code 200, with default header values.

The patch request was successful and the resource has been altered
*/
type PatchExternalJwtSignerOK struct {
	Payload *rest_model.Empty
}

func (o *PatchExternalJwtSignerOK) Error() string {
	return fmt.Sprintf("[PATCH /external-jwt-signers/{id}][%d] patchExternalJwtSignerOK  %+v", 200, o.Payload)
}
func (o *PatchExternalJwtSignerOK) GetPayload() *rest_model.Empty {
	return o.Payload
}

func (o *PatchExternalJwtSignerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.Empty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchExternalJwtSignerBadRequest creates a PatchExternalJwtSignerBadRequest with default headers values
func NewPatchExternalJwtSignerBadRequest() *PatchExternalJwtSignerBadRequest {
	return &PatchExternalJwtSignerBadRequest{}
}

/* PatchExternalJwtSignerBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type PatchExternalJwtSignerBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *PatchExternalJwtSignerBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /external-jwt-signers/{id}][%d] patchExternalJwtSignerBadRequest  %+v", 400, o.Payload)
}
func (o *PatchExternalJwtSignerBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *PatchExternalJwtSignerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchExternalJwtSignerUnauthorized creates a PatchExternalJwtSignerUnauthorized with default headers values
func NewPatchExternalJwtSignerUnauthorized() *PatchExternalJwtSignerUnauthorized {
	return &PatchExternalJwtSignerUnauthorized{}
}

/* PatchExternalJwtSignerUnauthorized describes a response with status code 401, with default header values.

The currently supplied session does not have the correct access rights to request this resource
*/
type PatchExternalJwtSignerUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *PatchExternalJwtSignerUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /external-jwt-signers/{id}][%d] patchExternalJwtSignerUnauthorized  %+v", 401, o.Payload)
}
func (o *PatchExternalJwtSignerUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *PatchExternalJwtSignerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchExternalJwtSignerNotFound creates a PatchExternalJwtSignerNotFound with default headers values
func NewPatchExternalJwtSignerNotFound() *PatchExternalJwtSignerNotFound {
	return &PatchExternalJwtSignerNotFound{}
}

/* PatchExternalJwtSignerNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type PatchExternalJwtSignerNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *PatchExternalJwtSignerNotFound) Error() string {
	return fmt.Sprintf("[PATCH /external-jwt-signers/{id}][%d] patchExternalJwtSignerNotFound  %+v", 404, o.Payload)
}
func (o *PatchExternalJwtSignerNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *PatchExternalJwtSignerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
